#!/usr/bin/env bash

#
# prerequisists: git, make, gcc
#

FFMPEG_GITHUB_URL=https://github.com/FFmpeg/FFmpeg.git

ffenv_install_ubuntu_dependencies() {
    # This installs the dependencies specified at
    # https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu
sudo apt-get update -qq && sudo apt-get -y install \
  autoconf \
  automake \
  build-essential \
  cmake \
  git-core \
  libass-dev \
  libfreetype6-dev \
  libgnutls28-dev \
  libmp3lame-dev \
  libsdl2-dev \
  libtool \
  libva-dev \
  libvdpau-dev \
  libvorbis-dev \
  libxcb1-dev \
  libxcb-shm0-dev \
  libxcb-xfixes0-dev \
  meson \
  ninja-build \
  pkg-config \
  texinfo \
  wget \
  yasm \
  zlib1g-dev \
  libunistring-dev \
  libaom-dev \
  libdav1d-dev \
  nasm \
  libx264-dev \
  libx265-dev \
  libvpx-dev \
  libssh-dev \
  libxml2-dev \
  liblzma-dev

}

ffenv_list() {
    default=$(ffenv_get_default)
    current=$FFMPEG_CURRENT
    for f in $(ls $FFMPEG_ROOT)
    do
        if [[ $f == "default" ]]
        then
            :
        else
            if [[ $f == "$current" ]]
            then
                echo -n "* "
            else
                echo -n "  "
            fi
            echo -n $f
            if [[ $f == "$default" ]]
            then
                echo " (default)"
            else
                echo
            fi
        fi
    done
}

ffenv_update_path() {
    new_path=$(echo -n $1 | tr ':' '\n' | egrep -v "^$FFMPEG_ROOT" | tr '\n' ':')
    new_path="$2:$new_path"
    echo "${new_path::-1}"  # Remove trailing colon
}

ffenv_update_env_variables() {
   export PATH=$(ffenv_update_path "$PATH" $FFMPEG_HOME/bin)
   export LD_LIBRARY_PATH=$(ffenv_update_path "$LD_LIBRARY_PATH" $FFMPEG_HOME/lib)
   export LIBRARY_PATH=$(ffenv_update_path "$LIBRARY_PATH" $FFMPEG_HOME/lib)
   export PKG_CONFIG_PATH=$(ffenv_update_path "$PKG_CONFIG_PATH" $FFMPEG_HOME/lib/pkgconfig)
   export C_INCLUDE_PATH=$(ffenv_update_path "$C_INCLUDE_PATH" $FFMPEG_HOME/include)
   export CPLUS_INCLUDE_PATH=$(ffenv_update_path "$CPLUS_INCLUDE_PATH" $FFMPEG_HOME/include)
}

ffenv_use() {
    if [[ ! -d "$FFMPEG_ROOT/$1" ]]
    then
        echo "Unknown version: $1" >&2
        echo "Available versions: " >&2
        list >&2
        return 1
    fi
    export FFMPEG_CURRENT=$1
    export FFMPEG_HOME=$FFMPEG_ROOT/$FFMPEG_CURRENT
    ffenv_update_env_variables
}

ffenv_get_name() {
    if [[ -z $2 ]]
    then
        echo "$(echo -n $1 | sed -re 's/^n([0-9.]+)$/\1/g')"
    else
        echo $2
    fi
}

ffenv_setup_repo() {
    version=$1
    name=$(ffenv_get_name $1 $2)
    repo=$FFMPEG_ROOT/$name/gitrepo
    echo "repo: $repo"
    if [[ -e $repo/.git ]]
    then
        echo "Repo allready exists: $repo" >&2
        return 1
    else
        version_dir=$FFMPEG_ROOT/$name
        mkdir -p $version_dir
        git clone --depth 1 --branch $version $FFMPEG_GITHUB_URL $repo
#        (cd $FFMPEG_MAIN_REPO; git worktree add $repo $version)
    fi
}

ffenv_configure_build() {
    name=$1
    repo=$FFMPEG_ROOT/$name/gitrepo
    builddir=$FFMPEG_ROOT/$name/build
    if [[ ! -d $repo ]]
    then
        echo "Repo $repo does not exist"
        return 1
    fi
    mkdir -p $builddir
    cd $builddir
    conffile=$FFMPEG_ROOT/$name/config.txt
    if ! [[ -f $conffile ]]
    then
        cp ~/.config/ffenv/build-configs/default $conffile
    fi
    args="$(cat $conffile | sed -re 's/#.*$//g' | tr '\n' ' ') --prefix=$FFMPEG_ROOT/$name"
    $repo/configure $args
}

ffenv_install_version() {
    version=$1
    name=$(ffenv_get_name $1 $2)
    echo "Installing version $version"
    if [[ ! -e $FFMPEG_ROOT/$name/gitrepo/.git ]]
    then
        ffenv_setup_repo $version $name
    fi
    if [[ ! -d $FFMPEG_ROOT/$name/build/ffbuild ]]
    then
        ffenv_configure_build $name
    fi
    cd $FFMPEG_ROOT/$name/build
    make install
}


ffenv_get_default() {
    if [[ -h $FFMPEG_ROOT/default ]]
    then
        basename $(readlink -f $FFMPEG_ROOT/default)
    else
        ls -1 $FFMPEG_ROOT | head -n1
    fi
}

ffenv_set_default() {
    if [[ -d $FFMPEG_ROOT/$1 ]]
    then
        rm $FFMPEG_ROOT/default
        ln -s $FFMPEG_ROOT/$1 $FFMPEG_ROOT/default
    else
        echo "Unknown version: $1"
        return 1
    fi
    }

ffenv_init() {
    if [[ -z "$FFMPEG_MAIN_REPO" ]]
    then
        export FFMPEG_MAIN_REPO=$HOME/gitrepos/thirdparty/FFmpeg
    fi
    if [[ -z "$FFMPEG_ROOT" ]]
    then
        export FFMPEG_ROOT=$HOME/ffmpeg
    fi

    if [[ -z "$FFMPEG_CURRENT" ]]
    then
        export FFMPEG_CURRENT=$(ffenv_get_default)
    fi
    export FFMPEG_HOME=$FFMPEG_ROOT/$FFMPEG_CURRENT
    ffenv_update_env_variables
}

ffenv_select_version() {
    if [[ -n "$1" ]] && [[ -d $FFMPEG_ROOT/$1 ]]
    then
        echo "$1"
    else
        select version in $(ls -1 $FFMPEG_ROOT | grep -v default)
        do
            if [[ -n "$version" ]]
            then
                echo $version
                break
            fi
        done
    fi
}

ffenv_help() {
    cat <<EOF
ffenv - tool to manage multiple ffmpeg versions

USAGE: $0 CMD [options]

commands
  help                  print help message
  list                  list installed versions
  use VERSION           use given version in current shell
  set-default VERSION   set default version
  install VERSION       install given version

VERSION parameter can be a tag name, a commit, or a numeric version

Default args to pass to configre are read from ~/.ffenv/build-configs/default
EOF
}

ffenv() {
    if [[ $# == 0 ]]
    then
        ffenv_list
        return
    fi
    case $1 in
        help | -h | --help)
            ffenv_help
            return
            ;;
        list)
            ffenv_list
            ;;
        use)
            ffenv_use $(ffenv_select_version "$2")
            ;;
        set-default)
            ffenv_set_default $(ffenv_select_version "$2")
            ;;
        install)
            ffenv_install_version $2 $3
            ;;
    esac
}

ffenv_init

